(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{526:function(t,_,r){"use strict";r.r(_);var a=r(56),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,r=t._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"一-简介"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-简介"}},[t._v("#")]),t._v(" 一：简介")]),t._v(" "),r("h2",{attrs:{id:"_1、什么是数据库-数据库管理系统-数据库系统-数据库管理员"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是数据库-数据库管理系统-数据库系统-数据库管理员"}},[t._v("#")]),t._v(" 1、什么是数据库, 数据库管理系统, 数据库系统, 数据库管理员")]),t._v(" "),r("p",[t._v("数据库：(DataBase 简称 DB)就是信息的集合或者说数据库是由数据库管理系统管理的数据的集合。")]),t._v(" "),r("p",[t._v("数据库管理系统 : 数据库管理系统(Database Management System 简称 DBMS)是一种操纵和管理数据库的大型软件，通常用于建立、使用和维护数据库。")]),t._v(" "),r("p",[t._v("数据库系统 : 数据库系统(Data Base System，简称 DBS)通常由软件、数据库和数据管理员(DBA)组成。")]),t._v(" "),r("p",[t._v("数据库管理员 : 数据库管理员(Database Administrator, 简称 DBA)负责全面管理和控制数据库系统。")]),t._v(" "),r("h2",{attrs:{id:"_2、什么是元组-码-候选码-主码-外码-主属性-非主属性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2、什么是元组-码-候选码-主码-外码-主属性-非主属性"}},[t._v("#")]),t._v(" 2、什么是元组, 码, 候选码, 主码, 外码, 主属性, 非主属性")]),t._v(" "),r("p",[r("strong",[t._v("元组：")]),t._v("（tuple）是关系数据库中的基本概念，关系是一张表，"),r("strong",[t._v("表中的每行（即数据库中的每条记录）就是一个元组")]),t._v("，每列就是一个属性。 在二维表里，元组也称为行。 码 ：码就是能唯一标识实体的属性，对应表中的列。")]),t._v(" "),r("p",[r("strong",[t._v("候选码："),r("strong",[t._v("若关系中的某一")]),t._v("属性或属性组的值能唯一的标识一个元组")]),t._v("，而其任何、子集都不能再标识，则称该属性组为候选码。例如：在学生实体中，“学号”是能唯一的区分学生实体的，同时又假设“姓名”、“班级”的属性组合足以区分学生实体，那么{学号}和{姓名，班级}都是候选码。")]),t._v(" "),r("p",[r("strong",[t._v("主码：")]),t._v(" 主码也叫主键。主码是从候选码中选出来的。 一个实体集中只能有一个主码，但可以有多个候选码。")]),t._v(" "),r("p",[r("strong",[t._v("外码：")]),t._v(" 外码也叫外键。如果一个关系中的一个属性是另外一个关系中的主码则这个属性为外码。")]),t._v(" "),r("p",[r("strong",[t._v("主属性：")]),t._v(" "),r("strong",[t._v("候选码中出现过的属性称为主属性")]),t._v("。比如关系 工人（工号，身份证号，姓名，性别，部门）. 显然工号和身份证号都能够唯一标示这个关系，所以都是候选码。工号、身份证号这两个属性就是主属性。如果主码是一个属性组，那么属性组中的属性都是主属性。 非主属性： 不包含在任何一个候选码中的属性称为非主属性。比如在关系——学生（学号，姓名，年龄，性别，班级）中，主码是“学号”，那么其他的“姓名”、“年龄”、“性别”、“班级”就都可以称为非主属性。")]),t._v(" "),r("h2",{attrs:{id:"_3、主键和外键有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3、主键和外键有什么区别"}},[t._v("#")]),t._v(" 3、主键和外键有什么区别")]),t._v(" "),r("p",[t._v("主键(主码)：主键用于唯一标识一个元组，"),r("strong",[t._v("不能有重复，不允许为空")]),t._v("。一个表只能有一个主键。")]),t._v(" "),r("p",[t._v("外键(外码)：外键用来和其他表建立联系用，外键是另一表的主键，"),r("strong",[t._v("外键是可以有重复的，可以是空值")]),t._v("。一个表可以有多个外键")]),t._v(" "),r("h2",{attrs:{id:"_4、drop、delete-与-truncate-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4、drop、delete-与-truncate-区别"}},[t._v("#")]),t._v(" 4、drop、delete 与 truncate 区别")]),t._v(" "),r("p",[t._v("drop:丢弃数据，drop table 表名，数据和表一并删除"),r("br"),t._v("\ntruncate:清空数据，再插入数据的时候自增长id从1开始"),r("br"),t._v("\ndelete:删除数据，delete from 表名 where 列名 = 值，删除某行数据。删除后再增加新数据自增长id不会从1开始")]),t._v(" "),r("p",[t._v("truncate和delete只删除数据不删除表的结构；drop语句会删除数据和表结构")]),t._v(" "),r("h2",{attrs:{id:"_5、数据库设计通常分为哪几步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5、数据库设计通常分为哪几步"}},[t._v("#")]),t._v(" 5、数据库设计通常分为哪几步")]),t._v(" "),r("p",[t._v("1、需求分析：分析用户的需求，包括数据，功能，性能需求。"),r("br"),t._v("\n2、概念结构设计：E-R图进行模型设计。"),r("br"),t._v("\n3、逻辑结构设计：E-R图转换为表，从E-R模型到关系模型的转换。"),r("br"),t._v("\n4、物理结构设计：主要是为所设计的数据库选择合适的存储结构和存取路径。"),r("br"),t._v("\n5、数据库实施：包括编程，测试和试运行。"),r("br"),t._v("\n6、数据库的运行和维护：系统的运营和数据库的日常维护。")])])}),[],!1,null,null,null);_.default=e.exports}}]);